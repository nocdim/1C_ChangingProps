&НаКлиенте
Процедура ПриОткрытии()

    Если ЭтоВнешняяОбработка() Тогда
        ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьРезультатПомещенияФайлаОбработки", ЭтотОбъект);
        НачатьПомещениеФайлов(ОписаниеОповещения, ИмяФайлаОбработки(), Ложь, УникальныйИдентификатор);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатПомещенияФайлаОбработки(ПомещенныеФайлы, ОбработчикЗавершения) Экспорт

	Если ПомещенныеФайлы <> Неопределено Тогда
		// Создаем копию текущией обработки на сервере
		ХранениеФайлаОбработки = КопияОбработкиНаСервере(ПомещенныеФайлы[0].Хранение);
		Объект.ХранениеФайлаОбработки = ХранениеФайлаОбработки;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция КопияОбработкиНаСервере(Хранение)

	Результат = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Хранение);
	ДвоичныеДанные.Записать(Результат);
	
	Возврат Результат;

КонецФункции
	
&НаСервере
Функция ИмяФайлаОбработки()

	Возврат РеквизитФормыВЗначение("Объект").ИспользуемоеИмяФайла;
	
КонецФункции

&НаСервере
Функция ЭтоВнешняяОбработка()
	
	ЧастиИмени = СтрРазделить(РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя(), ".");
	Возврат (ВРег(ЧастиИмени[0]) = "ВНЕШНЯЯОБРАБОТКА")
	
КонецФункции

&НаСервере
Функция ЗапуститьОбработкуНаСервере()
	ПараметрыВыполненияОбработки = Новый Структура;
	
	ПараметрыВыполненияОбработки.Вставить("Партнер", Объект.Партнер);
	ПараметрыВыполненияОбработки.Вставить("Организация", Объект.Организация);
	ПараметрыВыполненияОбработки.Вставить("Соглашение", Объект.Соглашение);
	
	ЭтоВнешняяОбработка = ЭтоВнешняяОбработка();
	ИмяОбработки = ?(ЭтоВнешняяОбработка, Объект.ХранениеФайлаОбработки, РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя());
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяОбработки",		ИмяОбработки);
	ПараметрыЗадания.Вставить("ИмяМетода",			"Выполнить_ТНаСервере");
	ПараметрыЗадания.Вставить("ПараметрыВыполнения",	ПараметрыВыполненияОбработки);
	ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка",	ЭтоВнешняяОбработка);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = '<Описание вашего фонового задания>'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор); 
	
	ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки"; // Выполняем процедуру из модуля объекта
	Возврат ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);
КонецФункции

&НаКлиенте
Процедура ЗапуститьОбработку(Команда)
	
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ВывестиПрогрессВыполнения", 
	ОткрытьФорму("ВнешняяОбработка.ВнешняяОбработка_Т_Фон.Форма.Прогресс",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца));
	
	ДлительнаяОперация = ЗапуститьОбработкуНаСервере();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = "Test";
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = ОповещениеОПрогрессеВыполнения; 
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Интервал = 1;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВывестиОкноЗавершения", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
КонецПроцедуры

//&НаКлиенте
//Процедура ВывестиПрогрессВыполнения(Результат, ДополнительныеПараметры) Экспорт
//	
//	//ОткрытьФорму("ВнешняяОбработка.ВнешняяОбработка_Т_Фон.Форма.Прогресс",,,,,,,
//	//РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//	
//	Попытка
//		
//		Прогресс_Статус = ПроверитьПрогресс(Результат.ИдентификаторЗадания);
//		
//		Если НЕ Прогресс_Статус.ЗаданиеВыполнено Тогда
//			
//			Объект.Статус = "ВыполняетсяОбработка";
//			Если Объект.Прогресс < Прогресс_Статус.Процент Тогда
//				
//				Объект.Прогресс = Прогресс_Статус.Процент;
//				
//			КонецЕсли; 
//			
//		Иначе
//			
//			Объект.Статус = "Успешно завершено!";
//			Объект.Прогресс = 100;
//			
//		КонецЕсли; 	
//		
//	Исключение
//		
//		Инфо = ИнформацияОбОшибке();
//		Сообщить("Описание='" + Инфо.Описание + "'");
//		Сообщить("ИмяМодуля='" + Инфо.ИмяМодуля + "'");
//		Сообщить("НомерСтроки=" + Инфо.НомерСтроки);
//		Сообщить("ИсходнаяСтрока='" + Инфо.ИсходнаяСтрока + "'");	
//		
//	КонецПопытки;
//	
//КонецПроцедуры

//&НаСервере
//Функция ПроверитьПрогресс(ИдентификаторЗадания)
//	
//	РезультатВыполнения = Новый Структура();
//	РезультатВыполнения.Вставить("ЗаданиеВыполнено",    Ложь);
//	РезультатВыполнения.Вставить("Процент",             0);
//	
//	Если НЕ ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
//		РезультатВыполнения.ЗаданиеВыполнено     = Истина;
//		РезультатВыполнения.Процент              = 100;
//	Иначе
//		Если ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
//			РезультатВыполнения.ЗаданиеВыполнено= Истина;
//			РезультатВыполнения.Процент         = 100;
//		Иначе
//			ПередаваемоеЗначение = ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторЗадания); // ПрочитатьПрогресс
//			Если ТипЗнч(ПередаваемоеЗначение) = Тип("Структура")
//				И ПередаваемоеЗначение.Свойство("Процент") Тогда
//				РезультатВыполнения.Процент     = ПередаваемоеЗначение.Процент;
//			КонецЕсли;
//		КонецЕсли;
//	КонецЕсли;
//	
//	Возврат РезультатВыполнения;	
//	
//КонецФункции // ()
 

&НаКлиенте
Процедура ВывестиОкноЗавершения(Результат, ДополнительныеПараметры) Экспорт

	Сообщить("ВЫПОЛНЕНО");	

КонецПроцедуры


&НаКлиенте
Процедура СоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НеобходимыеДанныеСтроки = Новый Структура;
	НеобходимыеДанныеСтроки.Вставить("Партнер", Объект.Партнер);
	НеобходимыеДанныеСтроки.Вставить("Организация", Объект.Организация);
	Форма = ОткрытьФорму("Справочник.СоглашенияСПоставщиками.ФормаВыбора",,Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = НеобходимыеДанныеСтроки.Партнер;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = НеобходимыеДанныеСтроки.Организация;
	ЭлементОтбора.Использование = Истина;
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТестНаСервере()
	Объект.Организация = Справочники.Организации.НайтиПоНаименованию("ЭРИАЛ ТРЕЙД");
	Объект.Партнер = Справочники.Партнеры.НайтиПоНаименованию("Динизада Султан Мохаммад Алах Мохаммад");
	Объект.Соглашение = Справочники.СоглашенияСПоставщиками.НайтиПоНаименованию("№ 07/09-2022-ЭТ от 07.09.2022 г.");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТест(Команда)
	ЗаполнитьТестНаСервере();
КонецПроцедуры

