&НаКлиенте
Процедура Выполнить_Т(Команда)
	
	Попытка
		
		Выполнить_ТНаФоне();	
		
	Исключение
		
		Сообщить("error! " + ОписаниеОшибки());
		
	КонецПопытки; 
	
КонецПроцедуры

&НаКлиенте
Процедура Выполнить_ТНаФоне()

	Если ЭтоВнешняяОбработка() Тогда
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьРезультатПомещенияФайлаОбработки", ЭтотОбъект);
	НачатьПомещениеФайлов(ОписаниеОповещения, ИмяФайлаОбработки(), Ложь, УникальныйИдентификатор);
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатПомещенияФайлаОбработки(ПомещенныеФайлы, ОбработчикЗавершения) Экспорт

	Если ПомещенныеФайлы <> Неопределено Тогда
	
		ХранениеФайлаОбработки = КопияОбработкиНаСервере(ПомещенныеФайлы[0].Хранение);	
		
	Иначе
		
		Сообщить("Critical error! Reason unknown :(");
		Возврат;
		
	КонецЕсли; 
	
	НачатьВыполнениеФоновогоЗадания(ХранениеФайлаОбработки);

КонецПроцедуры

&НаКлиенте
Процедура НачатьВыполнениеФоновогоЗадания(ХранениеФайлаОбработки)
	
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОповещениеОПрогрессеВыполнения", ЭтотОбъект);
	ОткрытьФорму("ВнешняяОбработка.ВнешняяОбработка_T.Форма.Прогресс",,,,,,
	ОповещениеОПрогрессеВыполнения,
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	ДлительнаяОперация = НачатьВыполнениеФоновогоЗаданияНаСервере(ХранениеФайлаОбработки);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = "Test_1";
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = ОповещениеОПрогрессеВыполнения;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ПолучатьРезультат = Истина;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОповещениеОЗавершении", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОПрогрессеВыполнения(Информация, ДопИнфо) Экспорт
	// Здесь необходимо менять значения полей модальной формы
	Для Каждого Элемент из Информация Цикл 
		Сообщить(Элемент.Ключ + ": " + Элемент.Значение); 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОЗавершении(Информация, ДопИнфо) Экспорт

	//Сообщить("Завершено");

КонецПроцедуры
 


&НаСервере
Функция НачатьВыполнениеФоновогоЗаданияНаСервере(ХранениеФайлаОбработки)

	ПараметрыВыполненияОбработки = Новый Структура;
	
	ПараметрыВыполненияОбработки.Вставить("Партнер", Объект.Партнер);
	ПараметрыВыполненияОбработки.Вставить("Организация", Объект.Организация);
	ПараметрыВыполненияОбработки.Вставить("Соглашение", Объект.Соглашение);
	
	// ... ... ... ... ... ... ... ... ... ... ...
	
	ЭтоВнешняяОбработка = ЭтоВнешняяОбработка();
	ИмяОбработки = ?(ЭтоВнешняяОбработка, ХранениеФайлаОбработки, РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя());
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяОбработки", ИмяОбработки);
	ПараметрыЗадания.Вставить("ИмяМетода", "Выполнить_ТНаСервере");
	ПараметрыЗадания.Вставить("ПараметрыВыполнения", ПараметрыВыполненияОбработки);
	ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка", ЭтоВнешняяОбработка);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = '<TEST_AO>'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	
	ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";
	Возврат ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);

КонецФункции // ()
 
 

&НаСервере
Функция КопияОбработкиНаСервере(Хранение)

	Результат = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Хранение);
	ДвоичныеДанные.Записать(Результат);
	
	Возврат Результат;

КонецФункции // ()
 

&НаСервере
Функция ИмяФайлаОбработки()

	Возврат РеквизитФормыВЗначение("Объект").ИспользуемоеИмяФайла;
	
КонецФункции

&НаСервере
Функция ЭтоВнешняяОбработка()
	
	ЧастиИмени = СтрРазделить(РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя(), ".");
	Возврат (ВРег(ЧастиИмени[0]) = "ВНЕШНЯЯОБРАБОТКА")
	
КонецФункции
 
 

&НаКлиенте
Процедура СоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НеобходимыеДанныеСтроки = Новый Структура;
	НеобходимыеДанныеСтроки.Вставить("Партнер", Объект.Партнер);
	НеобходимыеДанныеСтроки.Вставить("Организация", Объект.Организация);
	Форма = ОткрытьФорму("Справочник.СоглашенияСПоставщиками.ФормаВыбора",,Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = НеобходимыеДанныеСтроки.Партнер;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = НеобходимыеДанныеСтроки.Организация;
	ЭлементОтбора.Использование = Истина;
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТестНаСервере()
	Объект.Организация = Справочники.Организации.НайтиПоНаименованию("Гранд-Трейд ООО");
	Объект.Партнер = Справочники.Партнеры.НайтиПоНаименованию("АЛ.КОМПАНИ ООО");
	Объект.Соглашение = Справочники.СоглашенияСПоставщиками.НайтиПоНаименованию("ГТ НВС (АЛ.КОМПАНИ ООО)");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТест(Команда)
	ЗаполнитьТестНаСервере();
КонецПроцедуры
